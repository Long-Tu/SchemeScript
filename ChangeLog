*** Version 1.2.0

- Bug fix related to the initialization of the user dictionary used by code assist.
- Launchers are now private (they won't show anymore in the Run/Run... dialog).
- Implemented feature request #1404254 : Reformatting - remove trailing whitespaces
- Implemented feature request #1404253 : Include definitions in outline
- Implemented feature request #1307138 : Regular expressions for symbol definitions
- Implemented feature request #1437953 : Add BRL support

*** Version 1.1.4

- Now uses the official Kawa 1.8

*** Version 1.1.3

- The Remote Interpreter now properly detects when the remote socket closes
  gracefully.
- Fixed bug "1309531 - text editor properties not applied"
- Fixed bug "1306344 - Bracket matching box slightly off"

*** Version 1.1.0

- Added a 'Remote Interpreter'. Using this interface, one can send expressions
  to a remote interpreter over a socket. It is SISCweb-ready (default port number
  is 5156).
- Fix to content assist. Content assist is shown for the enclosing form
  or function call. Also, content assist is not systematically shown
  when the spacebar is pressed. This was annoying.

*** Version 1.0.0	

- The evaluation can be interrupted if it is supported by the interpreter
  (see the documentation for more details)
- Added an "interpreters" extension point, and a menu item to 
  select the current interpreter
- Added an interpreter: Embedded Kawa. It is the Kawa interpreter
  running inside the plug-in context/classpath. It comes with a 
  stack trace viewer.
- Added a 'Kawa scratchpad' view (see the documentation for more
  details and the examples subdirectory)
- Structural editing commands (configurable and highly experimental/unstable)
- new actions (add-require, expand-namespace expand-typename)
- 'define-namespace' clauses are processed for content assist
- Bug fixes.


*** Version 0.4.0

- When errors occur in the interpreter, error locations can be
  analyzed and hyperlinks added to the console window.
- Added an action to load the document in the interpreter (Ctrl-Shift-L),
  as well as the associated context menu

*** Version 0.3.0

- Added a Scheme perspective, with menus, toolbar actions
- Added integrated Scheme interpreter support
- Added fast eval keys
- Bug fixes:
   * parenthesis highlighting works even when the first
     character of the file is an opening parenthesis
   * renaming a file no longer breaks parenthesis highlighting
     (there may be some minor issues regarding the user
     dictionary, though)
   * pressing TAB on an already indented line no longer marks
     the file as modified


*** Version 0.2.1

- The "Find Definition" action now opens the "Definitions" view
- Added a "Find Symbol" action that pops up a dialog box for 	
  querying a symbol definition.


*** Version 0.2.0

- Added a first version of the documentation
- A new icon with transparent background
- Bug fix: strings can now contain backslash characters (\)


*** Version 0.1.7
   
- Extended mouse copy
- Can now open external fi	les (bug reported by Matthew Morgan)
- Added a new indentation category/scheme: 'none'. Ideal for PLT-style modules.
- Added a new preference page - Lexical extensions
  (determines whether square brackets are treated as parentheses or not,
  and if dash characters (#) can be part of identifiers)
- Major modifications to the Color preferences (now Appearance page)
  Each token type can have its bold/italic attribute set 
- Fixed the bug with the syntax/indentation preferences pages


*** Version 0.1.6
  
- Enhancements to code completion, content assist, text hovers
- Internal refactorings
- Outline view showing chapter-style comments

*** Version 0.1.5

- Initial support for code completion, content assist, and text hovers:
  mainly supports the Kawa special forms (module-name, define[-private|-constant],
  defmacro, define-syntax, define[-simple]-class, define-record-type).
  All Scheme files (currently only .scm files, but will be made configurable
  in the next release) are scanned.
- JumpToDefinition action - simply put your cursor on a symbol
  defined globally and press F12 (or use the contextual menu - right click).
- Keywords are colored differently (and they are displayed in bold italic).
- Added some context menu items.

*** Version 0.1.3

- tab width can be configured in Preferences
- Indentation takes tab width into account
- Types (symbols of the form <...>) are colored differently

